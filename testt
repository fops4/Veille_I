from datetime import datetime
from auto import ArticleScraper
from auto1 import VeilleProcessor
from auto2 import VeilleMailer

def main():
    """
    Fonction principale pour orchestrer l'ensemble du processus de veille.
    """
    print("ðŸ¤– DÃ©but du processus de veille automatisÃ©e.")

    # --- Ã‰tape 1 : Scraping des articles ---
    print("\n--- Lancement du scraping des nouveaux articles ---")
    
    # La date limite pourrait Ãªtre dynamique ou lue depuis un fichier
    # Pour l'exemple, on fixe une date rÃ©cente
    date_limite = datetime.now()
    base_url_to_scrape = "https://www.actuia.com/actualite/page/"
    
    scraper = ArticleScraper(base_url_to_scrape, date_limite)
    scraper.scrape_articles()
    scraper.save_to_csv()
    
    # --- Ã‰tape 2 : Traitement des articles avec Groq ---
    print("\n--- Lancement du traitement des articles avec Groq ---")
    processor = VeilleProcessor()
    processor.process_articles()
    
    # --- Ã‰tape 3 : Envoi de l'e-mail de synthÃ¨se ---
    print("\n--- Lancement de l'envoi de l'e-mail ---")
    mailer = VeilleMailer()
    articles_to_send = mailer.get_articles_to_email()
    mailer.send_email(articles_to_send)

    print("\nðŸŽ‰ Fin du processus de veille. La chaÃ®ne est terminÃ©e.")

if __name__ == "__main__":
    main()